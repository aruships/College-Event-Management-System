/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package event.management;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import java.sql.ResultSet;
import java.sql.*;
import java.sql.*;
import javax.swing.JOptionPane; 
import javax.swing.table.*;


/**
 *
 * @author arushi shetty
 */
public class eventslist extends javax.swing.JFrame {

    /**
     * Creates new form eventslist
     */
    public eventslist() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        evid = new javax.swing.JLabel();
        evname = new javax.swing.JLabel();
        nop = new javax.swing.JLabel();
        staffc = new javax.swing.JLabel();
        dnt = new javax.swing.JLabel();
        venue = new javax.swing.JLabel();
        evidtxt = new javax.swing.JTextField();
        evnametxt = new javax.swing.JTextField();
        noptxt = new javax.swing.JTextField();
        staffcoordinatortxt = new javax.swing.JTextField();
        dnttxt = new javax.swing.JTextField();
        venuetxt = new javax.swing.JTextField();
        addbutton = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        modetxt = new javax.swing.JTextField();
        mode = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        eventTable = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        home = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        evid.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        evid.setForeground(new java.awt.Color(0, 51, 153));
        evid.setText("Event id");
        getContentPane().add(evid, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 290, -1, -1));

        evname.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        evname.setForeground(new java.awt.Color(0, 51, 153));
        evname.setText("Event Name");
        getContentPane().add(evname, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 320, -1, -1));

        nop.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        nop.setForeground(new java.awt.Color(0, 51, 153));
        nop.setText("Total No. of participants");
        getContentPane().add(nop, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 350, 180, 20));

        staffc.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        staffc.setForeground(new java.awt.Color(0, 51, 153));
        staffc.setText("Staff Coordinator");
        getContentPane().add(staffc, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 380, -1, -1));

        dnt.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        dnt.setForeground(new java.awt.Color(0, 51, 153));
        dnt.setText("Date and Time");
        getContentPane().add(dnt, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 410, -1, -1));

        venue.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        venue.setForeground(new java.awt.Color(0, 51, 153));
        venue.setText("Venue");
        getContentPane().add(venue, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 450, 60, 20));

        evidtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                evidtxtActionPerformed(evt);
            }
        });
        getContentPane().add(evidtxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 290, 150, -1));

        evnametxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                evnametxtActionPerformed(evt);
            }
        });
        getContentPane().add(evnametxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 320, 150, -1));
        getContentPane().add(noptxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 350, 150, -1));

        staffcoordinatortxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                staffcoordinatortxtActionPerformed(evt);
            }
        });
        getContentPane().add(staffcoordinatortxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 380, 150, -1));
        getContentPane().add(dnttxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 410, 150, -1));
        getContentPane().add(venuetxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 450, 150, -1));

        addbutton.setText("Add");
        addbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbuttonActionPerformed(evt);
            }
        });
        getContentPane().add(addbutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 510, 70, -1));

        jButton4.setText("Delete");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 510, 70, -1));

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 540, 70, -1));
        getContentPane().add(modetxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 480, 150, -1));

        mode.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        mode.setForeground(new java.awt.Color(0, 51, 153));
        mode.setText("mode");
        getContentPane().add(mode, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 480, -1, -1));

        jButton2.setText("REFRESH");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 580, 90, 20));

        eventTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "EV_ID", "EV_NAME", "NO_OF_PARTICIPANTS", "STAFF_COORD", "DATE_TIME", "VENUE", "MODE"
            }
        ));
        eventTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                eventTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(eventTable);
        if (eventTable.getColumnModel().getColumnCount() > 0) {
            eventTable.getColumnModel().getColumn(0).setPreferredWidth(20);
            eventTable.getColumnModel().getColumn(1).setPreferredWidth(50);
            eventTable.getColumnModel().getColumn(2).setPreferredWidth(90);
            eventTable.getColumnModel().getColumn(3).setPreferredWidth(70);
            eventTable.getColumnModel().getColumn(4).setPreferredWidth(110);
            eventTable.getColumnModel().getColumn(5).setPreferredWidth(30);
            eventTable.getColumnModel().getColumn(6).setPreferredWidth(30);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 300, 790, 220));

        jButton3.setText("Edit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 540, 70, -1));

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(200, 0, 0));
        jLabel2.setText("YYYY-MM-DD HH:MM:SS");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 430, -1, -1));

        jLabel3.setFont(new java.awt.Font("Rockwell Extra Bold", 0, 78)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 51, 153));
        jLabel3.setText("EVENTS");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 420, 120));

        home.setBackground(new java.awt.Color(255, 255, 255));
        home.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        home.setForeground(new java.awt.Color(0, 51, 153));
        home.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/1 1 home.jpg"))); // NOI18N
        home.setText("Home");
        home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeActionPerformed(evt);
            }
        });
        getContentPane().add(home, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 30, 150, 30));

        jLabel4.setFont(new java.awt.Font("Dialog", 3, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(225, 0, 51));
        jLabel4.setText("All the details must be filled, incase of no information, please fill \"null / 0\"");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 260, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/eVENT MANAGEMENT SYSTEM (3).png"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void evidtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_evidtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_evidtxtActionPerformed

    private void addbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbuttonActionPerformed
       
         Connection conn = null;
         try{
             String url1 = "jdbc:mysql://localhost:3306/emsdb";
             String user = "root";
             String password = "0925arushi";
             
             conn = DriverManager.getConnection(url1, user, password);
            if (conn != null) {
                System.out.println("Connected to the database");
                String sqli;
                String DATE_TIME=dnttxt.getText();
                
                 String EV_ID = evidtxt.getText();
                String EV_NAME = evnametxt.getText();
                String NO_OF_PARTICIPANTS = noptxt.getText();
                String STAFF_COORD = staffcoordinatortxt.getText();
               
                String VENUE = venuetxt.getText();
                String MODE=modetxt.getText();
                PreparedStatement ps;
                 if(EV_NAME==null || EV_NAME.isEmpty() || NO_OF_PARTICIPANTS==null ||  NO_OF_PARTICIPANTS.isEmpty() || STAFF_COORD==null || STAFF_COORD.isEmpty()  ||VENUE==null ||  VENUE.isEmpty() || MODE==null ||  MODE.isEmpty() )
                 {
                     JOptionPane.showMessageDialog(null,"please fill all the deatils");
                      throw new IllegalArgumentException("cols cannot be null or empty.");
                     
                 }
                sqli = "Insert into emsdb.event values(?,?,?,?,?,?,?)";
                ps = conn.prepareStatement(sqli);
               
                ps.setString(1,EV_ID );
                ps.setString(2, EV_NAME);
                ps.setString(3, NO_OF_PARTICIPANTS);
                ps.setString(4, STAFF_COORD);
                ps.setString(5, DATE_TIME);
                ps.setString(6,VENUE );
                ps.setString(7, MODE);
                
               
                ps.execute();
                JOptionPane.showMessageDialog(null,"Event added");
                conn.close();
                evidtxt.setText(null);
                evnametxt.setText(null);
                noptxt.setText(null);
                staffcoordinatortxt.setText(null);
                venuetxt.setText(null);
                modetxt.setText(null);
                dnttxt.setText(null);
               
                
                
                
                
            }
         }
         
         catch (SQLException ex) {
             JOptionPane.showMessageDialog(null,"please fill ddetails properly");
            System.out.println("An error occurred");
            ex.printStackTrace();
        }
         finally {
            if (conn != null) {
                try {
                    conn.close();
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
            }
}
       
                   
            
    }//GEN-LAST:event_addbuttonActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        Connection conn = null;
         try{
             String url1 = "jdbc:mysql://localhost:3306/emsdb";
             String user = "root";
             String password = "0925arushi";
             
             conn = DriverManager.getConnection(url1, user, password);
            if (conn != null) {
                  System.out.println("Connected to the database");
                String sqli;
                 
                 PreparedStatement ps;
                sqli = "delete from emsdb.event where EV_ID='"+evidtxt.getText()+"'";
                ps = conn.prepareStatement(sqli);
                 ps.executeUpdate();
                 JOptionPane.showMessageDialog(null,"event deleted");
                 conn.close();
                 
               
            }
         }
          
         catch (SQLException ex) {
              JOptionPane.showMessageDialog(null,"please fill ddetails properly");
            System.out.println("An error occurred");
            ex.printStackTrace();
        }
         finally {
            if (conn != null) {
                try {
                    conn.close();
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
            }
}
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        new adminpage().setVisible(true);
            dispose();
        
    }//GEN-LAST:event_jButton1ActionPerformed

                                

    private void evnametxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_evnametxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_evnametxtActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         Connection conn = null;
       try{
         String url1 = "jdbc:mysql://localhost:3306/emsdb";
             String user = "root";
             String password = "0925arushi";
             
             conn = DriverManager.getConnection(url1, user, password);
            if (conn != null) {
                  System.out.println("Connected to the database");
       
         
            String Sql="Select * from emsdb.event";
            PreparedStatement pstmt = conn.prepareStatement(Sql);
            ResultSet rs = pstmt.executeQuery();
            DefaultTableModel model=(DefaultTableModel)eventTable.getModel();
            model.setRowCount(0);
            while(rs.next()){
                model.addRow(new String[]{rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7)});
            }
            }
       
       }
        catch (SQLException ex) {
             
            System.out.println("An error occurred");
            ex.printStackTrace();
        }
         finally {
            if (conn != null) {
                try {
                    conn.close();
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
            }
       
                 }
       

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
         Connection conn = null;
         try{
             String url1 = "jdbc:mysql://localhost:3306/emsdb";
             String user = "root";
             String password = "0925arushi";
             
             conn = DriverManager.getConnection(url1, user, password);
            if (conn != null) {
                System.out.println("Connected to the database");
                String sqli;
                String DATE_TIME=dnttxt.getText();
                
                 String EV_ID = evidtxt.getText();
                String EV_NAME = evnametxt.getText();
                String NO_OF_PARTICIPANTS = noptxt.getText();
                String STAFF_COORD = staffcoordinatortxt.getText();
               
                String VENUE = venuetxt.getText();
                String MODE=modetxt.getText();
                PreparedStatement ps;
                 if(EV_NAME==null || EV_NAME.isEmpty() || NO_OF_PARTICIPANTS==null ||  NO_OF_PARTICIPANTS.isEmpty() || STAFF_COORD==null || STAFF_COORD.isEmpty()  ||VENUE==null ||  VENUE.isEmpty() || MODE==null ||  MODE.isEmpty() )
                 {
                     JOptionPane.showMessageDialog(null,"please fill all the deatils");
                      throw new IllegalArgumentException("cols cannot be null or empty.");
                     
                 }
                sqli= "update emsdb.event set EV_NAME='"+EV_NAME+"',NO_OF_PARTICIPANTS='"+NO_OF_PARTICIPANTS+"',STAFF_COORD='"+STAFF_COORD+"',DATE_TIME='"+DATE_TIME+"',VENUE='"+VENUE+"',MODE='"+MODE+"' where EV_ID='"+EV_ID+"'";
                ps = conn.prepareStatement(sqli);
               
              
                
               
                ps.execute();
                JOptionPane.showMessageDialog(null,"Event UPDATED");
                conn.close();
                evidtxt.setText(null);
                evnametxt.setText(null);
                noptxt.setText(null);
                staffcoordinatortxt.setText(null);
                venuetxt.setText(null);
                modetxt.setText(null);
                dnttxt.setText(null);
               
                
                
                
                
            }
         }
         
         catch (SQLException ex) {
              JOptionPane.showMessageDialog(null,"please fill ddetails properly");
            System.out.println("An error occurred");
            ex.printStackTrace();
        }
         finally {
            if (conn != null) {
                try {
                    conn.close();
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
            }
         }
    
    }//GEN-LAST:event_jButton3ActionPerformed

    private void eventTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eventTableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model=(DefaultTableModel)eventTable.getModel();
        int i=eventTable.getSelectedRow();
        evidtxt.setText(model.getValueAt(i,0).toString());
        evnametxt.setText(model.getValueAt(i,1).toString());
        noptxt.setText(model.getValueAt(i,2).toString());
         staffcoordinatortxt.setText(model.getValueAt(i,3).toString());
         dnttxt.setText(model.getValueAt(i,4).toString());
         venuetxt.setText(model.getValueAt(i,5).toString());
         modetxt.setText(model.getValueAt(i,6).toString());        
    }//GEN-LAST:event_eventTableMouseClicked

    private void homeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeActionPerformed
        // TODO add your handling code here:
        new homepage().setVisible(true);
        dispose();
    }//GEN-LAST:event_homeActionPerformed

    private void staffcoordinatortxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_staffcoordinatortxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_staffcoordinatortxtActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(eventslist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(eventslist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(eventslist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(eventslist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new eventslist().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addbutton;
    private javax.swing.JLabel dnt;
    private javax.swing.JTextField dnttxt;
    private javax.swing.JTable eventTable;
    private javax.swing.JLabel evid;
    private javax.swing.JTextField evidtxt;
    private javax.swing.JLabel evname;
    private javax.swing.JTextField evnametxt;
    private javax.swing.JButton home;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel mode;
    private javax.swing.JTextField modetxt;
    private javax.swing.JLabel nop;
    private javax.swing.JTextField noptxt;
    private javax.swing.JLabel staffc;
    private javax.swing.JTextField staffcoordinatortxt;
    private javax.swing.JLabel venue;
    private javax.swing.JTextField venuetxt;
    // End of variables declaration//GEN-END:variables
}
